name: Deploy DEV API

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  workflow_dispatch:
  push:
    branches:
      - next
      - main
    paths:
      - 'package.json'
      - 'yarn.lock'
      - 'apps/api/**'
      - 'libs/dal/**'
      - 'libs/shared/**'
env:
  REGISTRY_IMAGE: ghcr.io/ras-devops/novu/api

jobs:
  get_version:
    uses: ./.github/workflows/get-version.yml
    permissions:
      contents: read
      pull-requests: read
    with:
      environment: Development
      environment_short: prod
    secrets: inherit

  test_api:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

  deploy_dev_api:
    if: "!contains(github.event.head_commit.message, 'ci skip')"
    # The type of runner that the job will run on
    runs-on: ${{ matrix.os }}
    needs: [get_version, test_api]
    timeout-minutes: 80
    environment: Development
    permissions:
      contents: write
      packages: write
      deployments: write
      id-token: write
    strategy:
      matrix:
        name: ['novu/api']
        os: [ubuntu-latest, macos-14]
        include:
          - os: ubuntu-latest
            skip_redis_mongodb: false
          - os: macos-latest
            skip_redis_mongodb: true
          - os: macos-latest
            skip_clean_space: true

    steps:
      - uses: actions/checkout@v3

      - name: Echo image to output
        id: Echo-image
        env:
          IMAGE_TAG: ${{ needs.get_version.outputs.env_tag }}
          SHA_SHORT: ${{ needs.get_version.outputs.sha_short }}
          SHA: ${{ needs.get_version.outputs.sha }}
        run: |
          echo "IMAGE_TAG = $IMAGE_TAG"
          echo "SHA_SHORT = $SHA_SHORT"
          echo "SHA = $SHA"
          echo "RELEASE_VERSION=${{ github.ref_name }}"
          echo "$RELEASE_VERSION"

      - uses: ./.github/actions/setup-project

      - uses: ./.github/actions/docker/build-api
        id: docker_build
        with:
          tag: ${{ needs.get_version.outputs.env_tag }}
          push: 'true'
          github_token: ${{ secrets.GITHUB_TOKEN }}
          docker_name: ${{ matrix.name }}
          bullmq_secret: ${{ secrets.BULL_MQ_PRO_NPM_TOKEN }}

  push_digest:
    needs: [deploy_dev_api, get_version]
    uses: ./.github/workflows/push-digest.yml
    permissions:
      packages: write
    with:
      environment: Development
      environment_short: dev
      custom_tag: ${{ needs.get_version.outputs.sha }}
      REGISTRY_IMAGE: ghcr.io/ras-devops/novu/api
