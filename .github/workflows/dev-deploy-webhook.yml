name: Deploy DEV WEBHOOK

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  workflow_dispatch:
  push:
    branches:
      - next
      - main
    paths:
      - 'package.json'
      - 'yarn.lock'
      - 'apps/webhook/**'
      - 'libs/dal/**'
      - 'libs/shared/**'

jobs:
#  test_webhook:
#    uses: ./.github/workflows/reusable-webhook-e2e.yml
  versioning:
    runs-on: ubuntu-latest
    timeout-minutes: 80
    environment: Development
    permissions:
      contents: read
      packages: write
      deployments: write
      id-token: write
    steps:
    - name: Version.
      uses: paulhatch/semantic-version@v5.3.0
      id: semantic-webhook
      with:
        tag_prefix: "v"
        version_format: "${major}.${minor}.${patch}"
        major_pattern: "(MAJOR-WEBHOOK)"
        major_regexp_flags: "feat(.*)"
        minor_pattern: "(MINOR-WEBHOOK)"
        minor_regexp_flags: "perf(.*)"
        debug: true
        bump_each_commit: true
        bump_each_commit_patch_pattern: "(PATH-WEBHOOK)"
        change_path: 'apps/webhook/** package.json yarn.lock libs/dal/** libs/shared/**'

    - name: Set TAGS
      id: sha_and_tag
      run: |
        echo "sha=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT
        echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
        echo "git_tag=v${{ steps.semantic-webhook.outputs.version }}" >> $GITHUB_OUTPUT
        echo "git_version_tag=${{ steps.semantic-webhook.outputs.version_tag }}" >> $GITHUB_OUTPUT

  publish_docker_image_webhook:
    if: "!contains(github.event.head_commit.message, 'ci skip')"
    needs: test_webhook
    uses: ./.github/workflows/reusable-docker.yml
    with:
      environment: Development
      package_name: novu/webhook
      project_path: apps/webhook
      test_port: 1341
      health_check: true
      local_tag: novu-webhook
      env_tag: dev
      depot_project_id: jbwgz4l0c0
    secrets: inherit

#  deploy_dev_webhook:
#    if: "!contains(github.event.head_commit.message, 'ci skip')"
#    needs: publish_docker_image_webhook
#    uses: ./.github/workflows/reusable-app-service-deploy.yml
#    secrets: inherit
#    with:
#      environment: Development
#      service_name: webhook
#      terraform_workspace: novu-dev
#      docker_image: ${{ needs.publish_docker_image_webhook.outputs.docker_image_ee }}
