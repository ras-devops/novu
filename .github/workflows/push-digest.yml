name: "Manifests merging"

on:
  workflow_call:
    inputs:
      ENV_TAG:
        description: 'Image TAG'
        required: true
        type: string
      REGISTRY_IMAGE:
        description: 'Registry of the image'
        required: true
        type: string
      SERVICE:
        description: 'The application we want to create manifest'
        required: true
        type: string

jobs:
  merge_digest:
    runs-on: ubuntu-latest
    timeout-minutes: 80
    environment: ${{ inputs.environment }}
    permissions:
      packages: write
    steps:
      - name: Prepare
        id: env-prepare
        shell: bash
        run: |
          export service=${{ inputs.SERVICE }}
          echo "SERVICE_NAME=$(basename "${service//-/-}")" >> $GITHUB_OUTPUT

      - name: Download digests
        uses: actions/download-artifact@v4
        with:
          path: /tmp/digests
          pattern: ${{ steps.env-prepare.outputs.SERVICE_NAME }}-digests-*
          merge-multiple: true

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        env:
          IMAGE_TAG: ${{ inputs.ENV_TAG }}
          REGISTRY_IMAGE: ${{ inputs.REGISTRY_IMAGE }}
        with:
          images: ${{ env.REGISTRY_IMAGE }}
          tags: ${{ env.IMAGE_TAG }}

      - name: Login To Registry
        shell: bash
        env:
          GH_ACTOR: ${{ github.actor }}
          GH_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo $GH_PASSWORD | docker login ghcr.io -u $GH_ACTOR --password-stdin

      - name: Echo DOCKER_METADATA_OUTPUT_JSON
        shell: bash
        run: |
          echo $DOCKER_METADATA_OUTPUT_JSON

      - name: Create manifest list and push
        working-directory: /tmp/digests
        env:
          IMAGE_TAG: ${{ inputs.ENV_TAG }}
          REGISTRY_IMAGE: ${{ inputs.REGISTRY_IMAGE }}  # Corrected line
        run: |
          docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
            $(printf '${{ env.REGISTRY_IMAGE }}@sha256:%s ' *)

      - name: Inspect image
        env:
          IMAGE_TAG: ${{ inputs.ENV_TAG }}
          REGISTRY_IMAGE: ${{ inputs.REGISTRY_IMAGE }}
        run: |
          docker buildx imagetools inspect ${{ env.REGISTRY_IMAGE }}:${{ env.IMAGE_TAG }}
